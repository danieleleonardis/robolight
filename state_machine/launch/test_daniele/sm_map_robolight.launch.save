<?xml version="1.0" encoding="UTF-8"?>

<launch>

	<!-- JOYSTICK PARAMS -->
	<arg name="use_local_joy"           default="0"/>
	<arg name="use_keyboard"      		default="1"/>

	<!-- VELOCITY AND ACCELERATION LIMITS -->
	<arg name="max_lin_vel"      		default="0.2"/>
	<arg name="min_lin_vel"      		default="-0.2"/>
	<arg name="max_ang_vel"      		default="0.5"/>
	<arg name="max_lin_acc"      		default="0.15"/>
	<arg name="max_ang_acc"      		default="0.7"/>

	<!-- SYSTEMS OF REFERENCE -->
	<!-- <node name="base_footprint_to_base_link"   pkg="tf2_ros"       type="static_transform_publisher"  	args="1.0 0.0 0.0 0 0 0 base_footprint base_link" /> -->
	<node name="base_to_laser_pub"  pkg="tf2_ros"       type="static_transform_publisher"   args="0.2 0.0 -0.05 0 0 3.141592654 base_link lidar_link" />

	<!-- LAUNCH JOYSTICK TO TWIST NODE -->
	<include file="$(find joystick_to_twist)/launch/joy_launcher.launch">
		<arg name="local_joy" value="$(arg use_local_joy)"/>
		<arg name="use_keyboard" value="$(arg use_keyboard)"/>
		<arg name="scale_lin_vel" value="$(arg max_lin_vel)"/>
		<arg name="scale_ang_vel" value="$(arg max_ang_vel)"/>
	</include>

	<!-- CAMERA 
	<include file="$(find jetson_csi_cam)/jetson_csi_cam.launch"/> -->

	<!-- LIDAR -->
	<include file="$(find lidar_light)/launch/lidar_robocovidlight.launch"/>

	<!-- COMUNICAZIONE VIA UDP CON SCHEDA DRIVER -->
	<node name="udp_sender" 	pkg="udp_controller" 	type="UDP_Sender.py" 	args='' />
	<node name="udp_receiver" 	pkg="udp_controller" 	type="UDP_Receiver.py" 	args='' />

	<!-- LAUNCH STATE MACHINE NODE -->
	<node name="state_machine" 	pkg="state_machine" 	type="main_sm.py" 		args='' output="screen">
		<param name="vel_reduction_coeff" value="0.2"/>
		<param name="local_joy"		  	  value="$(arg use_local_joy)" />
		<param name="use_keyboard"		  value="$(arg use_keyboard)" />
		<param name="max_lin_vel" value="$(arg max_lin_vel)"/>
		<param name="min_lin_vel" value="$(arg min_lin_vel)"/>
		<param name="max_ang_vel" value="$(arg max_ang_vel)"/>
		<param name="max_lin_acc" value="$(arg max_lin_acc)"/>
		<param name="max_ang_acc" value="$(arg max_ang_acc)"/>
	</node>

	<!-- LAUNCH LIDAR SUPERVISOR FOR OBSTACLE DETECTION -->
	<node name="lidar_supervisor" pkg="lidar_light"	type="lidar_supervisor"	args="">
		<param name="frontal_dist_thr" value="0.3"/>
		<param name="frontal_dist_thr_2" value="0.6"/>
		<param name="frontal_width" value="0.6"/>
		<param name="lidar_angle_offset" value="0.0"/> <!-- offset -PI per danbot, 0.0 per robocovid light -->
		<param name="scan_topic" value="/scan"/> <!-- default /scan usa /scan_filter su danbot per testare visuali ridotte del lidar -->
	</node>

	<!-- LAUNCH SLAM NODE (IRIS LAMA, MODALITA' SLAM) -->
	<node pkg="iris_lama_ros" type="slam2d_ros" name="slam2d_ros_1">
        <param name="scan_topic"    value="/scan" />
		<param name="global_frame_id"    value="map" />
		<param name="odom_frame_id"    value="odom" />
		<param name="base_frame_id"    value="base_link" />
		<param name="initial_pos_x"    value="0" />
		<param name="initial_pos_y"    value="0" />
		<param name="d_thresh"    value="0.01" />
		<param name="a_thresh"    value="0.2" />
		<param name="l2_max"    value="0.5" />
		<param name="resolution"    value="0.05" />
		<param name="strategy"    value=gn" />
		<param name="patch_size"    value="32" />
		<param name="max_iterations"    value="100" />
		<param name="~use_compression"    value="false" />
		<param name="~mrange"    value="3" />
		<param name="~map_publish_period"    value="5" />
	</node>

	
	<!-- LAUNCH MAP AUTOSAVE NODE -->
	<node name="map_server" type="map_server" pkg="map_server"  args="/home/xavier/maps/map_autosave.yaml"/>

	<node name="map_autosaver" pkg="map_server" type="map_autosaver" args="">
		<param name="map_save_period"    value="8.0" />
		<param name="map_filepath"    value="/home/xavier/maps/map_autosave" />
	</node>
	<!-- otherwise For saving the map, at the end launch from a terminal: rosrun map_server map_saver -f ~/maps/mymap -->

	<!-- LAUNCH WAYPOINTS RECORD NODE -->
	<node name="record_waypoints" type="record_waypoints.py" pkg="navigation_light"  args="">
		<param name="filepath"    value="/home/xavier/maps/waypoints_record.csv" />
		<param name="map_frame_id"    value="map" />
		<param name="base_frame_id"    value="base_link" />
		<param name="new_waypoint_thr"    value="0.3" />
	</node>

</launch> 
